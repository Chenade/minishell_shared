### Compile Error
[ ] clang: warning: -lreadline: 'linker' input unused [-Wunused-command-line-argument]

### Seg fault
[ ] Ctrl+C while input
[ ] input : test test | test test test
[ ] input : nothing




cat > c error.log -e > f
-> cat error.log -e > f

### Error on 25 Feb 2023

- [x]
minishell $ ..
minishell: : syntax error near unexpected token: |

//----------------------------------//

- [x]
minishell $ export a=""
minishell: export: not valid in this context: 

//----------------------------------//

- [x]
minishell $ export jkl
minishell: export: not valid in this context: jkl //no error needed

//----------------------------------//

- [x]
minishell $ echo -nnnnnnn salut

//----------------------------------//

- [x]
minishell $ cd .. (if a mkdir a/b/c and i cd a/b/c then i rm -rf ../../b)
minishell: cd: Command not found

//----------------------------------//

- [x]
minishell $ echo>a bonjour >a>b>f>g
minishell $ cat g

- [x]
minishell $ echo >a bonjour >a>b>f>g
minishell $ cat g

//----------------------------------//

- [x]
<<lol | <<sisi //could implement this kind of error in the case of ctrl-D
> 
bash: warning: here-document at line 129 delimited by end-of-file (wanted `lol')
> 
bash: warning: here-document at line 129 delimited by end-of-file (wanted `sisi')

//----------------------------------//

- [x]
minishell $ gdfgfdt | echo sisigdfgdf | sgffd | gfdgd | gfdgfd
minishell: gdfgfdt: Command not found
minishell: sgffd: Command not found
minishell: gfdgd: miCnoimsmhaenldl :n ogtf dfgofudn:d 09m
1mCommand not found

// message are mixing up, its a wait prblm

//----------------------------------//

- [x]
echo >f -n bonjour

you write bonjour inside the out and not in the file as you should

//----------------------------------//


- [x]
minishell $ <<fdsfds //ctrl-D
>
minishell $ echo $?
1 //should be 0

- [x]
minishell $ <<fdsfds //ctrl-C
>
minishell $ echo $? 
 1 //Should be 130

//----------------------------------//

- [x]
minishell $ exit 1 2 //when you puting 2 exit status
//you dont need to quit the program when you put 2 exit status

should be ->
minishell $ exit 1 2 
exit
bash: exit: too many arguments

- [x]
minishell $ exit 1 2ss
-> minishell exit at 2 (numeric argument required)

//----------------------------------//

### Error on 25 Feb 2023 - Part 2 - 1

-[x]
export CMD=echo ARG=lol;$CMD $argument
should be lol
but nothing is printed

-[x]
bash-5.1$ echo ok "" ok
ok  ok
//reason: didn't print space when there is a empty string

-[x]
bash-5.1$ echo -n -n -na
-nabash-5.1$ 
//reason:condition error

-[x]
exit -1 2
should not exit: too many args
//reason: didn't convert to positive number before return

-[x]
bash-5.1$ exit -9223372036854775809
exit
bash: exit: -9223372036854775809: numeric argument required
//reason: didn't convert to positive number before return

-[ ] (?)
bash-5.1$ echo hello > $test
bash: $test: ambiguous redirect

-[x]
bash-5.1$ export loop='bonjour$loop' ; echo $loop
bonjour$loop

-[x]
bash-5.1$ echo abc > a def 123
bash-5.1$ cat a
abc def 123
//reason: redirection in the middle

### Error on 25 Feb 2023 - Part 2 - 2

-[ ]
bash-5.1$ export var="cat Makefile | grep >" ; echo $var
cat Makefile | grep >

-[ ]
bash-5.1$ echo "$USER$USER=lol$USER"
ykuoykuo=lolykuo
//reason: get_env is not working,the condition is not good

//----------------------------------//

-[ ]
bash-5.1$ echo test > ls >> ls >>ls;echo test >> ls; cat ls
test
test

-[ ]
bash-5.1$ export A=1 B=2;echo $A; echo $B; echo "$A'$B"
1
2
1'2
